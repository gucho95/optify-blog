import React from 'react';

const ArrowDown = (props) => (
  <svg
    className='-mr-1 h-5 w-5'
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 20 20'
    fill='currentColor'
    aria-hidden='true'
    {...props}
  >
    <path
      fillRule='evenodd'
      d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'
      clipRule='evenodd'
    />
  </svg>
);

const Hamburger = (props) => (
  <svg
    width='34'
    height='24'
    viewBox='0 0 34 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <rect x='6' width='22' height='4' rx='2' fill='#582DD2' />
    <rect y='10' width='34' height='4' rx='2' fill='#582DD2' />
    <rect x='6' y='20' width='22' height='4' rx='2' fill='#582DD2' />
  </svg>
);

const Facebook = (props) => (
  <svg
    width='24'
    height='24'
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path d='M12 0C5.36992 0 0 5.38922 0 12.0431C0 18.0072 4.32458 22.9509 9.99521 23.9138V14.5581H7.10262V11.1952H9.99521V8.70898C9.99521 5.83473 11.7422 4.25389 14.3055 4.25389C15.537 4.25389 16.5823 4.34012 16.8974 4.38323V7.38683H15.1217C13.7327 7.38683 13.4606 8.0479 13.4606 9.02515V11.1665H16.7828L16.3532 14.5293H13.4606V24C19.4033 23.2814 24 18.2084 24 12.0431C24.0143 5.38922 18.63 0 12 0Z' />
  </svg>
);
const Linkedin = (props) => (
  <svg
    width='24'
    height='24'
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path d='M12 0C5.37188 0 0 5.37188 0 12C0 18.6281 5.37188 24 12 24C18.6281 24 24 18.6281 24 12C24 5.37188 18.6281 0 12 0ZM8.5125 18.1406H5.59219V9.34687H8.5125V18.1406ZM7.05 8.14688H7.03125C6.05156 8.14688 5.41406 7.47187 5.41406 6.62812C5.41406 5.76562 6.06563 5.10938 7.06875 5.10938C8.07188 5.10938 8.68594 5.76562 8.70469 6.62812C8.70469 7.47187 8.07187 8.14688 7.05 8.14688ZM19.05 18.1406H16.1297V13.4391C16.1297 12.2578 15.7078 11.4516 14.6484 11.4516C13.8422 11.4516 13.3594 11.9953 13.1484 12.5203C13.0734 12.7078 13.05 12.9703 13.05 13.2328V18.1406H10.1297C10.1297 18.1406 10.1672 10.1719 10.1297 9.34687H13.05V10.5938C13.4391 9.99375 14.1328 9.14062 15.6844 9.14062C17.6063 9.14062 19.05 10.3969 19.05 13.0969V18.1406Z' />
  </svg>
);

const Twitter = (props) => (
  <svg
    width='24'
    height='24'
    viewBox='0 0 24 24'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path d='M12 0C5.37188 0 0 5.37188 0 12C0 18.6281 5.37188 24 12 24C18.6281 24 24 18.6281 24 12C24 5.37188 18.6281 0 12 0ZM17.4797 9.35625C17.4844 9.47344 17.4891 9.59531 17.4891 9.7125C17.4891 13.35 14.7188 17.55 9.65156 17.55C8.09531 17.55 6.64688 17.0953 5.42813 16.3125C5.64375 16.3359 5.86406 16.35 6.08438 16.35C7.37344 16.35 8.56406 15.9094 9.50625 15.1688C8.30156 15.1453 7.28437 14.3484 6.93281 13.2562C7.10156 13.2891 7.275 13.3078 7.44844 13.3078C7.70156 13.3078 7.94531 13.275 8.175 13.2094C6.91406 12.9562 5.96719 11.8453 5.96719 10.5094C5.96719 10.4953 5.96719 10.4859 5.96719 10.4719C6.3375 10.6781 6.76406 10.8047 7.21406 10.8141C6.47344 10.3219 5.99063 9.47813 5.99063 8.52188C5.99063 8.01562 6.12656 7.54219 6.36563 7.13906C7.725 8.80781 9.75469 9.9 12.0422 10.0172C11.9953 9.81563 11.9719 9.60469 11.9719 9.38906C11.9719 7.87031 13.2047 6.63281 14.7281 6.63281C15.5203 6.63281 16.2375 6.96563 16.7391 7.50469C17.3672 7.38281 17.9578 7.15313 18.4875 6.83438C18.2812 7.47656 17.8453 8.01562 17.2781 8.35781C17.8359 8.29219 18.3656 8.14219 18.8578 7.92188C18.4828 8.48438 18.0187 8.96719 17.4797 9.35625Z' />
  </svg>
);

const Close = (props) => (
  <svg
    width='34'
    height='28'
    viewBox='0 0 20 20'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M18.1569 1.18618C17.359 0.388326 16.0655 0.388325 15.2676 1.18618L9.72421 6.72957L4.48009 1.48545C3.65309 0.658447 2.31226 0.658447 1.48526 1.48545C0.658255 2.31245 0.658257 3.65328 1.48526 4.48028L6.72938 9.7244L1.18617 15.2676C0.388314 16.0655 0.388314 17.359 1.18617 18.1569C1.98402 18.9547 3.27759 18.9547 4.07544 18.1569L9.61865 12.6137L14.863 17.858C15.69 18.685 17.0308 18.685 17.8578 17.858C18.6848 17.031 18.6848 15.6902 17.8578 14.8632L12.6135 9.61885L18.1569 4.07546C18.9547 3.2776 18.9547 1.98403 18.1569 1.18618Z'
    />
  </svg>
);

const Eye = (props) => (
  <svg
    width='24'
    height='15'
    viewBox='0 0 24 15'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M11.574 14.5238C16.9993 14.5238 23.1479 10.9874 23.1479 7.66335C23.1479 4.33929 17.361 0.476196 11.574 0.476196C5.78699 0.476196 0 4.31479 0 7.66335C0 11.0119 6.14867 14.5238 11.574 14.5238ZM11.574 11.0119C13.5716 11.0119 15.1909 9.43957 15.1909 7.5C15.1909 5.56043 13.5716 3.9881 11.574 3.9881C9.57639 3.9881 7.95703 5.56043 7.95703 7.5C7.95703 9.43957 9.57639 11.0119 11.574 11.0119Z'
    />
  </svg>
);

const Upload = (props) => (
  <svg
    // width='52'
    // height='52'
    viewBox='0 0 52 52'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <g filter='url(#filter0_d)'>
      <rect x='7' y='7' width='38' height='38' rx='19' fill='#EBEDF4' />
    </g>
    <path d='M17 25C17 23.8954 17.8954 23 19 23H33C34.1046 23 35 23.8954 35 25V32C35 33.1046 34.1046 34 33 34H19C17.8954 34 17 33.1046 17 32V25Z' />
    <mask
      id='path-3-outside-1'
      maskUnits='userSpaceOnUse'
      x='20.0302'
      y='15.95'
      width='12'
      height='12'
      fill='black'
    >
      <rect fill='white' x='20.0302' y='15.95' width='12' height='12' />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M26.0001 16.95C25.608 16.95 25.2901 17.2679 25.2901 17.66V24.3937L22.3047 21.4286C22.0131 21.139 21.5404 21.139 21.2488 21.4286C20.9573 21.7182 20.9573 22.1877 21.2488 22.4773L25.4724 26.6722C25.764 26.9618 26.2367 26.9618 26.5283 26.6722C26.5387 26.6618 26.5487 26.6513 26.5583 26.6405L30.7518 22.4755C31.0434 22.1859 31.0434 21.7163 30.7518 21.4268C30.4603 21.1372 29.9875 21.1372 29.696 21.4268L26.7102 24.3923V17.66C26.7102 17.2679 26.3923 16.95 26.0001 16.95Z'
      />
    </mask>
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M26.0001 16.95C25.608 16.95 25.2901 17.2679 25.2901 17.66V24.3937L22.3047 21.4286C22.0131 21.139 21.5404 21.139 21.2488 21.4286C20.9573 21.7182 20.9573 22.1877 21.2488 22.4773L25.4724 26.6722C25.764 26.9618 26.2367 26.9618 26.5283 26.6722C26.5387 26.6618 26.5487 26.6513 26.5583 26.6405L30.7518 22.4755C31.0434 22.1859 31.0434 21.7163 30.7518 21.4268C30.4603 21.1372 29.9875 21.1372 29.696 21.4268L26.7102 24.3923V17.66C26.7102 17.2679 26.3923 16.95 26.0001 16.95Z'
    />
    <path
      d='M25.2901 24.3937L24.5854 25.1032L26.2901 26.7963V24.3937H25.2901ZM22.3047 21.4286L21.6 22.1381H21.6L22.3047 21.4286ZM21.2488 21.4286L21.9535 22.1381H21.9535L21.2488 21.4286ZM21.2488 22.4773L20.5441 23.1868H20.5441L21.2488 22.4773ZM25.4724 26.6722L24.7677 27.3817L24.7677 27.3817L25.4724 26.6722ZM26.5283 26.6722L27.233 27.3817L27.233 27.3817L26.5283 26.6722ZM26.5583 26.6405L25.8536 25.931L25.8331 25.9514L25.8138 25.9729L26.5583 26.6405ZM30.7518 22.4755L31.4565 23.185L31.4565 23.185L30.7518 22.4755ZM30.7518 21.4268L30.0471 22.1363V22.1363L30.7518 21.4268ZM29.696 21.4268L30.4006 22.1363L30.4006 22.1363L29.696 21.4268ZM26.7102 24.3923H25.7102V26.7949L27.4149 25.1018L26.7102 24.3923ZM26.2901 17.66C26.2901 17.8202 26.1603 17.95 26.0001 17.95V15.95C25.0557 15.95 24.2901 16.7156 24.2901 17.66H26.2901ZM26.2901 24.3937V17.66H24.2901V24.3937H26.2901ZM21.6 22.1381L24.5854 25.1032L25.9948 23.6842L23.0094 20.719L21.6 22.1381ZM21.9535 22.1381C21.8551 22.2358 21.6984 22.2358 21.6 22.1381L23.0094 20.719C22.3279 20.0421 21.2257 20.0421 20.5441 20.719L21.9535 22.1381ZM21.9535 21.7678C22.0557 21.8692 22.0557 22.0366 21.9535 22.1381L20.5441 20.719C19.8588 21.3997 19.8588 22.5061 20.5441 23.1868L21.9535 21.7678ZM26.1771 25.9626L21.9535 21.7678L20.5441 23.1868L24.7677 27.3817L26.1771 25.9626ZM25.8236 25.9626C25.922 25.8649 26.0787 25.8649 26.1771 25.9626L24.7677 27.3817C25.4492 28.0586 26.5514 28.0586 27.233 27.3817L25.8236 25.9626ZM25.8138 25.9729C25.8171 25.9693 25.8203 25.9659 25.8236 25.9627L27.233 27.3817C27.257 27.3578 27.2803 27.3333 27.3028 27.3082L25.8138 25.9729ZM30.0471 21.766L25.8536 25.931L27.263 27.35L31.4565 23.185L30.0471 21.766ZM30.0471 22.1363C29.945 22.0348 29.945 21.8674 30.0471 21.766L31.4565 23.185C32.1418 22.5043 32.1418 21.3979 31.4565 20.7172L30.0471 22.1363ZM30.4006 22.1363C30.3023 22.234 30.1455 22.234 30.0471 22.1363L31.4565 20.7172C30.775 20.0403 29.6728 20.0403 28.9913 20.7172L30.4006 22.1363ZM27.4149 25.1018L30.4006 22.1363L28.9913 20.7172L26.0055 23.6828L27.4149 25.1018ZM25.7102 17.66V24.3923H27.7102V17.66H25.7102ZM26.0001 17.95C25.84 17.95 25.7102 17.8202 25.7102 17.66H27.7102C27.7102 16.7156 26.9446 15.95 26.0001 15.95V17.95Z'
      fill='#EBEDF4'
      mask='url(#path-3-outside-1)'
    />
    <defs>
      <filter
        id='filter0_d'
        x='0'
        y='0'
        width='52'
        height='52'
        filterUnits='userSpaceOnUse'
        colorInterpolationFilters='sRGB'
      >
        <feFlood floodOpacity='0' result='BackgroundImageFix' />
        <feColorMatrix
          in='SourceAlpha'
          type='matrix'
          values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'
        />
        <feOffset />
        <feGaussianBlur stdDeviation='3.5' />
        <feColorMatrix
          type='matrix'
          values='0 0 0 0 0.808264 0 0 0 0 0.81939 0 0 0 0 0.858333 0 0 0 1 0'
        />
        <feBlend mode='normal' in2='BackgroundImageFix' result='effect1_dropShadow' />
        <feBlend mode='normal' in='SourceGraphic' in2='effect1_dropShadow' result='shape' />
      </filter>
    </defs>
  </svg>
);

const Download = (props) => (
  <svg width='52' height='52' viewBox='0 0 52 52' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <g filter='url(#filter0_d)'>
      <rect x='7' y='7' width='38' height='38' rx='19' fill='#EBEDF4' />
    </g>
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M18.5969 19.6829C18.5969 19.6829 18.5969 19.683 18.5969 19.683V30.6678C18.5969 31.7724 19.4924 32.6678 20.5969 32.6678H36.0742C37.1788 32.6678 38.0742 31.7724 38.0742 30.6678V21.6829C38.0742 20.5784 37.1788 19.6829 36.0742 19.6829H27.6863L26.6847 18.1805C26.4993 17.9023 26.187 17.7352 25.8527 17.7352H20.5447C19.469 17.7352 18.5969 18.6072 18.5969 19.6829Z'
      fill='#4E24C6'
    />
    <mask
      id='path-3-outside-1'
      maskUnits='userSpaceOnUse'
      x='15'
      y='19.3322'
      width='22'
      height='17'
      fill='black'
    >
      <rect fill='white' x='15' y='19.3322' width='22' height='17' />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M16 22.2799C16 22.2799 16 22.2799 16 22.2799V33.2647C16 34.3693 16.8954 35.2647 18 35.2647H33.4773C34.5819 35.2647 35.4773 34.3693 35.4773 33.2647V24.2799C35.4773 23.1753 34.5819 22.2799 33.4773 22.2799H25.0894L24.0878 20.7775C23.9023 20.4993 23.5901 20.3322 23.2557 20.3322H17.9477C16.872 20.3322 16 21.2042 16 22.2799Z'
      />
    </mask>
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M16 22.2799C16 22.2799 16 22.2799 16 22.2799V33.2647C16 34.3693 16.8954 35.2647 18 35.2647H33.4773C34.5819 35.2647 35.4773 34.3693 35.4773 33.2647V24.2799C35.4773 23.1753 34.5819 22.2799 33.4773 22.2799H25.0894L24.0878 20.7775C23.9023 20.4993 23.5901 20.3322 23.2557 20.3322H17.9477C16.872 20.3322 16 21.2042 16 22.2799Z'
      fill='#4E24C6'
    />
    <path
      d='M16 22.2799L15 22.2798V22.2799H16ZM25.0894 22.2799L24.2574 22.8346L24.5542 23.2799H25.0894V22.2799ZM24.0878 20.7775L24.9198 20.2228V20.2228L24.0878 20.7775ZM17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799V22.2799C17 22.2799 17 22.2799 17 22.2799H15C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799V22.2799C15 22.2799 15 22.2799 15 22.2799H17ZM17 33.2647V22.2799H15V33.2647H17ZM18 34.2647C17.4477 34.2647 17 33.817 17 33.2647H15C15 34.9216 16.3432 36.2647 18 36.2647V34.2647ZM33.4773 34.2647H18V36.2647H33.4773V34.2647ZM34.4773 33.2647C34.4773 33.817 34.0296 34.2647 33.4773 34.2647V36.2647C35.1342 36.2647 36.4773 34.9216 36.4773 33.2647H34.4773ZM34.4773 24.2799V33.2647H36.4773V24.2799H34.4773ZM33.4773 23.2799C34.0296 23.2799 34.4773 23.7276 34.4773 24.2799H36.4773C36.4773 22.623 35.1342 21.2799 33.4773 21.2799V23.2799ZM25.0894 23.2799H33.4773V21.2799H25.0894V23.2799ZM23.2557 21.3322L24.2574 22.8346L25.9215 21.7252L24.9198 20.2228L23.2557 21.3322ZM23.2557 21.3322L23.2557 21.3322L24.9198 20.2228C24.5489 19.6664 23.9245 19.3322 23.2557 19.3322V21.3322ZM17.9477 21.3322H23.2557V19.3322H17.9477V21.3322ZM17 22.2799C17 21.7565 17.4243 21.3322 17.9477 21.3322V19.3322C16.3198 19.3322 15 20.6519 15 22.2798L17 22.2799Z'
      fill='#EBEDF4'
      mask='url(#path-3-outside-1)'
    />
    <defs>
      <filter
        id='filter0_d'
        x='0'
        y='0'
        width='52'
        height='52'
        filterUnits='userSpaceOnUse'
        colorInterpolationFilters='sRGB'
      >
        <feFlood floodOpacity='0' result='BackgroundImageFix' />
        <feColorMatrix
          in='SourceAlpha'
          type='matrix'
          values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'
        />
        <feOffset />
        <feGaussianBlur stdDeviation='3.5' />
        <feColorMatrix
          type='matrix'
          values='0 0 0 0 0.808264 0 0 0 0 0.81939 0 0 0 0 0.858333 0 0 0 1 0'
        />
        <feBlend mode='normal' in2='BackgroundImageFix' result='effect1_dropShadow' />
        <feBlend mode='normal' in='SourceGraphic' in2='effect1_dropShadow' result='shape' />
      </filter>
    </defs>
  </svg>
);

const Checked = (props) => (
  <svg viewBox='0 0 22 22' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
    <rect x='0.5' y='0.5' width='21' height='21' rx='10.5' stroke='#079E83' />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M16.5794 10.1818C17.1404 9.59597 17.1404 8.64622 16.5794 8.06043C16.0183 7.47465 15.1087 7.47465 14.5476 8.06043L10.8229 11.9495L8.45268 9.47472C7.89164 8.88894 6.98201 8.88894 6.42097 9.47472C5.85992 10.0605 5.85992 11.0103 6.42097 11.596L9.79558 15.1195C9.79935 15.1235 9.80314 15.1275 9.80696 15.1315C9.9593 15.2906 10.1373 15.4064 10.3271 15.4791C10.8363 15.6742 11.4301 15.5584 11.8389 15.1316C11.8445 15.1257 11.8501 15.1198 11.8556 15.1139L16.5794 10.1818Z'
      fill='#079E83'
    />
  </svg>
);

const Fail = (props) => (
  <svg viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg' {...props}>
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M6.01041 3.88911C5.42462 3.30332 4.47487 3.30332 3.88909 3.88911C3.3033 4.4749 3.3033 5.42464 3.88909 6.01043L5.65685 7.7782L3.88909 9.54597C3.3033 10.1318 3.3033 11.0815 3.88909 11.6673C4.47487 12.2531 5.42462 12.2531 6.01041 11.6673L7.77817 9.89952L9.54594 11.6673C10.1317 12.2531 11.0815 12.2531 11.6673 11.6673C12.253 11.0815 12.253 10.1318 11.6673 9.54597L9.89949 7.7782L11.6673 6.01043C12.253 5.42464 12.253 4.4749 11.6673 3.88911C11.0815 3.30332 10.1317 3.30332 9.54594 3.88911L7.77817 5.65688L6.01041 3.88911Z'
    />
  </svg>
);

const ShapeTop = (props) => (
  <svg
    version='1.0'
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 768.000000 64.000000'
    preserveAspectRatio='xMidYMid meet'
    {...props}
  >
    <g transform='translate(0.000000,64.000000) scale(0.100000,-0.100000)' stroke='none'>
      <path
        d='M3405 610 c-892 -44 -2171 -216 -3352 -451 l-53 -10 0 -75 0 -74
 3840 0 3840 0 0 68 0 68 -252 48 c-1168 221 -2182 360 -3043 416 -222 15 -775
 20 -980 10z'
      />
    </g>
  </svg>
);

const ShapeBottom = (props) => (
  <svg
    version='1.0'
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 768.000000 57.000000'
    preserveAspectRatio='xMidYMid meet'
    {...props}
  >
    <g transform='translate(0.000000,57.000000) scale(0.100000,-0.100000)' stroke='none'>
      <path
        d='M0 355 c0 -130 4 -215 10 -215 5 0 118 18 252 40 1358 222 2497 344
3393 366 842 20 2139 -104 3675 -351 189 -30 345 -55 347 -55 2 0 3 97 3 215
l0 215 -3840 0 -3840 0 0 -215z'
      />
    </g>
  </svg>
);

const Avatar = (props) => (
  <svg
    width='40'
    height='40'
    viewBox='0 0 40 40'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <rect x='0.5' y='0.5' width='39' height='39' rx='19.5' fill='#E3E6FC' stroke='#E3E6FC' />
    <rect x='8.59521' y='12.2539' width='23.8095' height='17.8571' rx='5' fill='white' />
    <rect x='12.7617' y='16.6191' width='6.34921' height='6.34921' rx='3.1746' fill='#582DD2' />
    <rect x='18.3174' y='26.1428' width='5.55556' height='1.5873' rx='0.793651' fill='#582DD2' />
    <rect x='23.0791' y='16.6191' width='6.34921' height='6.34921' rx='3.1746' fill='#582DD2' />
    <rect x='19.1113' y='7.88892' width='3.1746' height='3.1746' rx='1.5873' fill='#582DD2' />
    <rect x='19.9048' y='9.47632' width='1.5873' height='3.96825' rx='0.793651' fill='#582DD2' />
    <rect x='31.8096' y='18.0081' width='1.19048' height='6.15079' rx='0.595238' fill='#353638' />
    <rect x='8' y='18.0081' width='1.19048' height='6.15079' rx='0.595238' fill='#353638' />
  </svg>
);

const PageRight = (props) => {
  <svg
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 20 20'
    fill='currentColor'
    aria-hidden='true'
    {...props}
  >
    <path
      fillRule='evenodd'
      d='M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z'
      clipRule='evenodd'
    />
  </svg>;
};

const RightArrow = (props) => {
  return (
    <svg
      width='12'
      height='24'
      viewBox='0 0 7 12'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M2.02211 1.02175C1.76628 0.765926 1.35151 0.765926 1.09568 1.02175C0.839851 1.27758 0.839851 1.69236 1.09568 1.94819L5.16714 6.01965L0.988615 10.1982C0.738181 10.4486 0.738181 10.8546 0.988615 11.1051C1.23905 11.3555 1.64508 11.3555 1.89552 11.1051L6.54721 6.45338C6.79764 6.20294 6.79764 5.79691 6.54721 5.54648C6.5428 5.54206 6.53834 5.53773 6.53383 5.53347L2.02211 1.02175Z'
      />
    </svg>
  );
};

const Calendar = (props) => {
  return (
    <svg width='15' height='15' fill='none' xmlns='http://www.w3.org/2000/svg'>
      <path
        {...props}
        fillRule='evenodd'
        clipRule='evenodd'
        d='M3.5 0C3.22386 0 3 0.223858 3 0.5V1C1.34315 1 0 2.34315 0 4V5H13V4C13 2.34315 11.6569 1 10 1V0.5C10 0.223858 9.77614 0 9.5 0C9.22386 0 9 0.223858 9 0.5V1H4V0.5C4 0.223858 3.77614 0 3.5 0ZM13 6H0V12C0 13.6569 1.34315 15 3 15H10C11.6569 15 13 13.6569 13 12V6Z'
        fill='none'
      />
    </svg>
  );
};

const Time = (props) => {
  return (
    <svg
      width='16'
      height='16'
      viewBox='0 0 16 16'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <rect width='16' height='16' rx='8' fill='#E3E6FC' />
      <path
        d='M7.5 4.5V8.51938C7.5 8.82316 7.63809 9.11047 7.8753 9.30024L10 11'
        stroke='#353638'
        strokeLinecap='round'
      />
    </svg>
  );
};

const TimePrimary = (props) => {
  return (
    <svg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0ZM8 4.5C8 4.22386 7.77614 4 7.5 4C7.22386 4 7 4.22386 7 4.5V8.51937C7 8.97505 7.20713 9.40602 7.56296 9.69068L9.68765 11.3904C9.90328 11.5629 10.2179 11.528 10.3904 11.3123C10.5629 11.0967 10.528 10.7821 10.3123 10.6096L8.18765 8.90981C8.06905 8.81492 8 8.67127 8 8.51937V4.5Z'
        fill='#582DD2'
      />
    </svg>
  );
};

const LeftArrow = (props) => {
  return (
    <svg
      width='12'
      height='24'
      viewBox='0 0 7 12'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M4.97887 11.0952C5.23469 11.351 5.64947 11.351 5.9053 11.0952C6.16113 10.8394 6.16113 10.4246 5.9053 10.1688L1.83384 6.0973L6.01236 1.91877C6.2628 1.66834 6.2628 1.26231 6.01236 1.01187C5.76193 0.761439 5.3559 0.761439 5.10546 1.01187L0.453768 5.66357C0.203334 5.914 0.203334 6.32003 0.453768 6.57047C0.45818 6.57488 0.462639 6.57921 0.467146 6.58347L4.97887 11.0952Z'
      />
    </svg>
  );
};

const VerticalDiv = (props) => {
  return (
    <svg
      width='2'
      height='8'
      viewBox='0 0 2 8'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <rect width='2' height='8' rx='1' fill='#B4B6C2' />
    </svg>
  );
};

const HorizontalDiv = (props) => {
  return (
    <svg
      width='10'
      height='2'
      viewBox='0 0 10 2'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <rect width='10' height='2' rx='1' fill='#353638' />
    </svg>
  );
};

const Point = (props) => {
  return (
    <svg
      width='4'
      height='4'
      viewBox='0 0 4 4'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <rect width='4' height='4' rx='2' fill='#979797' />
    </svg>
  );
};
const Check = (props) => (
  <svg width='13' height='10' viewBox='0 0 13 10' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <rect
      x='12.4729'
      y='1.68726'
      width='10.7458'
      height='2.38615'
      rx='1.19307'
      transform='rotate(135 12.4729 1.68726)'
      fill='none'
      {...props}
    />
    <rect
      x='1.65649'
      y='2.75436'
      width='6.89375'
      height='2.34278'
      rx='1.17139'
      transform='rotate(45 1.65649 2.75436)'
      fill='none'
      {...props}
    />
  </svg>
);
const Loader = (props) => (
  <svg
    xmlns='http://www.w3.org/2000/svg'
    xlink='http://www.w3.org/1999/xlink'
    x='0px'
    y='0px'
    viewBox='0 0 50 50'
    space='preserve'
    {...props}
  >
    <path
      fill='none'
      d='M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z'
      {...props}
    >
      <animateTransform
        attributeType='xml'
        attributeName='transform'
        type='rotate'
        from='0 25 25'
        to='360 25 25'
        dur='0.6s'
        repeatCount='indefinite'
      />
    </path>
  </svg>
);

const ChipsClose = (props) => {
  return (
    <svg
      width='15'
      height='15'
      viewBox='0 0 15 15'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M6.24264 4.82843C5.85212 4.43791 5.21895 4.43791 4.82843 4.82843C4.4379 5.21896 4.4379 5.85212 4.82843 6.24265L6.24264 7.65686L4.82843 9.07107C4.4379 9.4616 4.4379 10.0948 4.82843 10.4853C5.21895 10.8758 5.85212 10.8758 6.24264 10.4853L7.65685 9.07107L9.07107 10.4853C9.46159 10.8758 10.0948 10.8758 10.4853 10.4853C10.8758 10.0948 10.8758 9.4616 10.4853 9.07107L9.07107 7.65686L10.4853 6.24265C10.8758 5.85212 10.8758 5.21896 10.4853 4.82843C10.0948 4.43791 9.46159 4.43791 9.07107 4.82843L7.65685 6.24265L6.24264 4.82843Z'
      />
    </svg>
  );
};

const Info = (props) => {
  return (
    <svg
      width='16'
      height='16'
      viewBox='0 0 16 16'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      {...props}
    >
      <rect width='16' height='16' rx='8' />
      <rect x='7' y='7' width='2' height='6' rx='1' fill='white' />
      <rect x='7' y='4' width='2' height='2' rx='1' fill='white' />
    </svg>
  );
};

const Unread = (props) => (
  <svg
    width='14'
    height='10'
    viewBox='0 0 14 10'
    fill='red'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <rect y='0.666626' width='14' height='9.33333' rx='1.5' />
    <path
      d='M12.735 2.629C12.9597 2.4685 13.0118 2.15622 12.8513 1.93152C12.6908 1.70681 12.3785 1.65476 12.1538 1.81527L12.735 2.629ZM1.84613 1.81527C1.62142 1.65476 1.30915 1.70681 1.14864 1.93152C0.988137 2.15622 1.04018 2.4685 1.26489 2.629L1.84613 1.81527ZM6.41872 5.69585L6.70933 5.28899L6.41872 5.69585ZM12.1538 1.81527L7.29057 5.28899L7.87181 6.10272L12.735 2.629L12.1538 1.81527ZM6.70933 5.28899L1.84613 1.81527L1.26489 2.629L6.1281 6.10272L6.70933 5.28899ZM7.29057 5.28899C7.11672 5.41316 6.88318 5.41316 6.70933 5.28899L6.1281 6.10272C6.64964 6.47525 7.35027 6.47525 7.87181 6.10272L7.29057 5.28899Z'
      fill='white'
    />
  </svg>
);

const Read = (props) => (
  <svg
    width='14'
    height='15'
    viewBox='0 0 14 15'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M6.70005 2.02883C6.87783 1.8955 7.12228 1.8955 7.30005 2.02883L12.0496 5.59097L7.66213 9.92426C7.26918 10.3123 6.6321 10.3123 6.23916 9.92426L1.89436 5.6331L6.70005 2.02883ZM0.322845 5.63794C0.356414 5.56418 0.408431 5.49755 0.477832 5.4455L6.10005 1.22883C6.63339 0.828833 7.36672 0.828833 7.90005 1.22883L13.5223 5.4455C13.5918 5.49763 13.6438 5.56438 13.6774 5.63827C13.8794 5.89381 14 6.21668 14 6.56772V12.9011C14 13.7295 13.3284 14.4011 12.5 14.4011H1.5C0.671573 14.4011 0 13.7295 0 12.9011V6.56772C0 6.21653 0.120685 5.89354 0.322845 5.63794Z'
    />
  </svg>
);

const Remove = (props) => (
  <svg
    width='12'
    height='16'
    viewBox='0 0 12 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path d='M0.820824 4.10656C0.782492 3.52946 1.24026 3.04028 1.81863 3.04028H10.1814C10.7597 3.04028 11.2175 3.52946 11.1792 4.10656L10.5663 13.3328C10.4965 14.3836 9.62386 15.2003 8.57074 15.2003H3.42925C2.37614 15.2003 1.50345 14.3836 1.43365 13.3328L0.820824 4.10656Z' />
    <path
      fillRule='evenodd'
      clipRule='evenodd'
      d='M4.68882 0C4.17033 0 3.75 0.420325 3.75 0.938823C3.75 0.938833 3.75 0.938842 3.75 0.938852H0.469412C0.210163 0.938852 0 1.14901 0 1.40826C0 1.66751 0.210163 1.87768 0.469412 1.87768H11.5306C11.7898 1.87768 12 1.66751 12 1.40826C12 1.14901 11.7898 0.938852 11.5306 0.938852H8.25C8.25 0.938842 8.25 0.938833 8.25 0.938823C8.25 0.420325 7.82967 0 7.31118 0H4.68882Z'
    />
  </svg>
);

const Label = (props) => (
  <svg
    width='16'
    height='10'
    viewBox='0 0 16 10'
    fill='current'
    xmlns='http://www.w3.org/2000/svg'
    {...props}
  >
    <path d='M0 2C0 0.89543 0.895431 0 2 0H10.43C10.9814 0 11.5084 0.227697 11.8864 0.629271L15.355 4.31463C15.7174 4.69968 15.7174 5.30031 15.355 5.68536L11.8864 9.37073C11.5084 9.7723 10.9814 10 10.43 10H2C0.895428 10 0 9.10457 0 8V2Z' />
  </svg>
);

const Icon = {
  ArrowDown,
  Hamburger,
  Twitter,
  Facebook,
  Linkedin,
  Close,
  Eye,
  Upload,
  Download,
  Checked,
  Fail,
  ShapeBottom,
  ShapeTop,
  Avatar,
  PageRight,
  RightArrow,
  LeftArrow,
  Calendar,
  Time,
  TimePrimary,
  VerticalDiv,
  HorizontalDiv,
  Point,
  Check,
  Loader,
  ChipsClose,
  Info,
  Remove,
  Read,
  Unread,
  Label,
};

export default Icon;
